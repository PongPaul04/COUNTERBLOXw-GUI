local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer

-- Aimbot states
local AimbotEnabled = false
local AimbotHeld = false
local Smoothness = 0.1  -- Smoothness factor for aiming (lower values = smoother aiming)

-- FOV setting (in degrees)
local FOV = 90

-- Flag to control ESP script execution
local scriptRunning = true

-- Function to toggle Aimbot
local function toggleAimbot()
    AimbotEnabled = not AimbotEnabled
    print(AimbotEnabled and "Aimbot Enabled" or "Aimbot Disabled")
end

-- Function to check if the target is visible (not behind walls)
local function isTargetVisible(target)
    local ray = Ray.new(Camera.CFrame.Position, (target.Position - Camera.CFrame.Position).unit * 1000)
    local hitPart, _ = workspace:FindPartOnRay(ray, LocalPlayer.Character, false, true)
    return hitPart and hitPart:IsDescendantOf(target.Parent)
end

-- Function to check if a position is within the FOV
local function isInFOV(targetPosition)
    local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)
    if onScreen then
        local viewportSize = Camera.ViewportSize
        local center = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        local targetVector = Vector2.new(screenPosition.X, screenPosition.Y)
        local distanceFromCenter = (targetVector - center).Magnitude
        local fovRadius = (viewportSize.X / 2) * math.tan(math.rad(FOV / 2))
        return distanceFromCenter <= fovRadius
    end
    return false
end

-- Function to check if a player is an enemy
local function isEnemy(player)
    return player.Team ~= LocalPlayer.Team
end

-- Function to find the closest visible enemy within the FOV
local function getClosestVisibleEnemy()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            if isEnemy(player) and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
                local head = player.Character.Head
                local distance = (head.Position - Camera.CFrame.Position).Magnitude
                
                if distance < shortestDistance and isTargetVisible(head) and isInFOV(head.Position) then
                    shortestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

-- Improved function to make the camera smoothly aim at the target with better accuracy
local function aimAt(targetPosition)
    local cameraPosition = Camera.CFrame.Position
    local direction = (targetPosition - cameraPosition).unit
    local targetCFrame = CFrame.new(cameraPosition, cameraPosition + direction)

    -- Adjusted lerp factor for smoother transition and improved accuracy
    Camera.CFrame = Camera.CFrame:Lerp(targetCFrame, Smoothness)
end

-- Function to apply aimbot
local function applyAimbot()
    if AimbotEnabled and AimbotHeld then
        local closestEnemy = getClosestVisibleEnemy()
        if closestEnemy and closestEnemy.Character and closestEnemy.Character:FindFirstChild("Head") then
            aimAt(closestEnemy.Character.Head.Position)
        end
    end
end

-- Function to create a GUI message
local function createSuccessMessage()
    if not scriptRunning then return end

    -- Check for existing GUI and remove it to avoid duplication
    if LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("SuccessMessageGui") then
        LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("SuccessMessageGui"):Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SuccessMessageGui"
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local textLabel = Instance.new("TextLabel")
    textLabel.Text = "Gawang pinoy Ni Paul Combis."
    textLabel.Size = UDim2.new(0.3, 0, 0.1, 0)
    textLabel.Position = UDim2.new(0.35, 0, 0.9, 0)
    textLabel.TextScaled = true
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    textLabel.Parent = screenGui

    task.delay(2, function()
        if screenGui then
            screenGui:Destroy()
        end
    end)
end

-- Function to create and update HP Bars correctly
local function createOrUpdateHPBar(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local existingHPBar = character:FindFirstChild("HPBar")
    if existingHPBar then
        existingHPBar:Destroy()
    end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "HPBar"
    billboardGui.Size = UDim2.new(4, 0, 1, 0)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = character

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 0.2, 0)
    bgFrame.Position = UDim2.new(0, 0, 0.8, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    bgFrame.Parent = billboardGui

    local hpBar = Instance.new("Frame")
    hpBar.Size = UDim2.new(1, 0, 1, 0)
    hpBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    hpBar.Parent = bgFrame

    local function updateHealth()
        local healthPercentage = humanoid.Health / humanoid.MaxHealth
        hpBar.Size = UDim2.new(healthPercentage, 0, 1, 0)
    end

    humanoid:GetPropertyChangedSignal("Health"):Connect(updateHealth)
    humanoid.Died:Connect(function()
        if billboardGui then billboardGui:Destroy() end
    end)
    
    updateHealth()
end

local function highlightPlayer(player)
    if player == LocalPlayer or not scriptRunning then return end

    local character = player.Character or player.CharacterAdded:Wait()

    if character and scriptRunning then
        for _, obj in pairs(character:GetChildren()) do
            if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                obj:Destroy()
            end
        end

        local highlight = Instance.new("Highlight")
        highlight.Adornee = character
        highlight.FillTransparency = 1

        if player.Team == LocalPlayer.Team then
            highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
        else
            highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
        end
        
        highlight.Parent = character

        createOrUpdateHPBar(character)
    end
end

local function onPlayerAdded(player)
    if not scriptRunning then return end

    player.CharacterAdded:Connect(function(character)
        if scriptRunning then
            highlightPlayer(player)
        end
    end)

    if player.Character then
        highlightPlayer(player)
    end
end

local function createControlButton(name, text, position, color, callback)
    local existingButton = LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild(name)
    if existingButton then
        existingButton:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ControlGui"
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = text
    button.Size = UDim2.new(0.15, 0, 0.05, 0)
    button.Position = position
    button.TextScaled = true
    button.BackgroundColor3 = color
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Parent = screenGui

    button.MouseButton1Click:Connect(callback)
end

local function createRefreshButton()
    createControlButton("RefreshButton", "ULITIN", UDim2.new(0.15, 0, 0.95, 0), Color3.fromRGB(0, 255, 0), function()
        scriptRunning = false
        scriptRunning = true
        for _, player in pairs(Players:GetPlayers()) do
            highlightPlayer(player)
        end
        createSuccessMessage()
    end)
end

local function createStopButton()
    createControlButton("StopButton", "Ihinto", UDim2.new(0.3, 0, 0.95, 0), Color3.fromRGB(255, 0, 0), function()
        scriptRunning = false
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                for _, obj in pairs(player.Character:GetChildren()) do
                    if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                        obj:Destroy()
                    end
                end
            end
        end
        print("Script Stopped.")
    end)
end

local function createSmoothnessSlider()
    local existingSlider = LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("SmoothnessSliderGui")
    if existingSlider then
        existingSlider:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SmoothnessSliderGui"
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0.2, 0, 0.05, 0)
    sliderFrame.Position = UDim2.new(0.8, 0, 0.9, 0)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderFrame.Parent = screenGui

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0.1, 0, 1, 0)
    sliderButton.Position = UDim2.new(Smoothness, 0, 0, 0)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.Text = ""
    sliderButton.Parent = sliderFrame

    sliderButton.MouseButton1Down:Connect(function()
        local dragging = true
        local mouseMove, mouseUp

        mouseMove = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
                local relativeX = math.clamp(input.Position.X - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
                sliderButton.Position = UDim2.new(relativeX / sliderFrame.AbsoluteSize.X, 0, 0, 0)
                Smoothness = sliderButton.Position.X.Scale
            end
        end)

        mouseUp = UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
                mouseMove:Disconnect()
                mouseUp:Disconnect()
            end
        end)
    end)
end

-- Create GUI elements
createRefreshButton()
createStopButton()
createSmoothnessSlider()

-- Connect events
for _, player in pairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end
Players.PlayerAdded:Connect(onPlayerAdded)

-- Connect to InputBegan event to listen for Aimbot toggle (Q key)
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Q then
        toggleAimbot()
    elseif input.KeyCode == Enum.KeyCode.LeftShift then
        AimbotHeld = true
    end
end)

-- Connect to InputEnded event to listen for Aimbot hold release (Shift key)
UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftShift then
        AimbotHeld = false
    end
end)

-- Main loop to run Aimbot
RunService.RenderStepped:Connect(function()
    applyAimbot()
end)
